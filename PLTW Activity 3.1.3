#pragma config(StandardModel, "POE + CIM Testbed")
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*
Project Title:
Team Members:
Date:
Section:


Task Description:


Pseudocode:

*/

task main()
{
	/*

	//Program begins, insert code within curly braces
	untilBump(bumpSwitch, 500);         // wait for bumpswitch to be hit
	startMotor (rightMotor, 63);        // when it is, start the right motor 1/2
	startMotor (leftMotor, 63);         // start the left motor 1/2
	untilBump (bumpSwitch, 500);        // wait for bumpswitch to be hit again
	startMotor(rightMotor, -63);        // start right motor reverse 1/2
	startMotor(leftMotor, -63);         // start left motor reverse 1/2
	wait(3.5);                          // run for 3.5 seconds


	turnLEDOn(green);                                 // turn on LED
	untilPotentiometerGreaterThan(2048,potentiometer);// wait for pot to read >2048
	turnLEDOff(green);                                // when it does, turn of LED
	startMotor(leftMotor, 63);                        // also start left motor
	untilPotentiometerLessThan(2030,potentiometer);   // when pot goes to <2048
	stopMotor(leftMotor);                             // then top left motor



	//Turn on both motors forward
	startmotor (leftmotor,-127);     // turn on left motor in reverse
	startmotor (rightmotor, -127);   //Turn on right motor in reverse
	untilEncoderCounts(480, quad);   // until the encoder has counted 480 degrees
	untilEncoderCounts(1260, quad);  //until another 3.5 rotations of the encoder have passed
	stopMotor(leftMotor);            //Turn off both motors
	stopMotor(rightMotor);           //Turn off both motors



	setServo(servoMotor,-63);       // check position of servo
	wait(2);                        // wait so I can verify
	setServo(servoMotor, 63);       // reset position of servo
	wait (2);                       // wait so I can verify
	setServo(servoMotor, 127);      // set servomotor at position 127
	untilDark(500,lightSensor);     // stay until the light sensor is covered
	setServo(servoMotor, -127);     // set servo to -127 position

	//

	startMotor(rightMotor, 127);
	wait (2);
	stopMotor(rightMotor);
	wait (2);
	untilSonarLessThan(20,sonar);
	startMotor(leftMotor, 60);
	startMotor(rightMotor, 60);
	untilSonarGreaterThan(25,sonar);
	stopMotor(leftMotor);
	stopMotor(rightMotor);



	// end of 3.1.3 *******************************************

	// 3.1.4 deliverable section*******************************


	// Problem 14

	while (true)                              //repeat indefinitely
	{
	while (SensorValue [limitSwitch] ==1 )  //repeat while limitSwitch pressed
	{
	if (SensorValue [lightSensor] >700)  //respond to lightSensor
	{turnFlashlightOn(flashlight);       // turn on flashlight
	}
	else
	{turnFlashlightOff(flashlight);      // else turn flashlight off
	}
	}
	//do this when the limitSwitch is not pressed
	}
	while (condition)
	{
	body
	}


	// Problem 19

	while (true)                         // constant loop
	{if (SensorValue[bumpSwitch] == 1)   // if bump switch is on
	{turnLEDOn(green);                 // flash the LED by turning it on
	waitInMilliseconds(500);         //  -- waiting for 1/2 sec
	turnLEDOff(green);               //  -- turning it off
	waitInMilliseconds(500);         //  then waiting before looping back up
	}
	else															// otherwise
	{
	turnLEDOff(green);               // turn the LED off
	}


	}


	// problem 22  A
	while (true)                          // infinite loop
	{
	while (SensorValue[bumpSwitch] ==1)  // as long as the bump switch is depressed
	{
	if (SensorValue[sonar] <20)        // check if sonar senses something within 20 cm
	{
	startMotor(leftMotor,60);    // if so start motor half speed forward
	}
	else                           // otherwise
	{
	startMotor(leftMotor,-60);   // start motor half speed backward
	}

	}

	}
	*/
	while (true)                          // infinite loop
	{
		if (SensorValue[bumpSwitch] ==1)    // if bump switch is pressed,
		{
			startMotor(rightMotor, 63);       // start right motor
		}
		else
		{ stopMotor(rightMotor);            // otherwise, stop motor
		}
		if (SensorValue[limitSwitch] ==1)   // if limit switch is pressed
		{
			startMotor(leftMotor , 63);        // start left motor
		}
    	else
		{ stopMotor(leftMotor);            // otherwise, stop motor
		}
	}
}
