#pragma config(StandardModel, "POE + CIM Testbed")
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*----------------------------------------------------------------------------------------------------*\
|*                                        - Wait for Push 1 -                                         *|
|*                                      ROBOTC on VEX 2.0 CORTEX                                      *|
|*                                                                                                    *|
|*  This program instructs the robot to move forward at half speed until the bumper sensor is         *|
|*  pressed.  There is a two second pause at the beginning of the program.                            *|
|*                                                                                                    *|
|*                                        ROBOT CONFIGURATION                                         *|
|*    NOTES:                                                                                          *|
|*    1)  Reversing 'rightMotor' (port 2) in the "Motors and Sensors Setup" is needed with the        *|
|*        "Squarebot" mode, but may not be needed for all robot configurations.                       *|
|*                                                                                                    *|
|*    MOTORS & SENSORS:                                                                               *|
|*    in1 	 = lineFollower
|*in2 	 = potentiometer
|*in3	 = lightSensor
|*dgtl1	 = limitSwitch
|*dgtl2  = bumpSwitch
|*dgtl3  = quad encoder
|*dgtl4  = encoder 2nd port
|*dgtl5  = sonar (input)
|*dgtl6  = sonar (output)
|*dgtl12 = green LED
|*
|*Motor Ports:
|*port1 = flashlight
|*port2 = rightMotor
|*port3 = leftMotor
|*port9 = servoMotor    *|
\*-----------------------------------------------------------------------------------------------4246-*/


//+++++++++++++++++++++++++++++++++++++++++++++| MAIN |+++++++++++++++++++++++++++++++++++++++++++++++

int bumpvalue=0;
int limitvalue=0;

task main()
{
	wait1Msec(2000);						            // Robot waits for 2000 milliseconds before executing program

	while(SensorValue(bumpSwitch) == 0)		// Loop while robot's bumper/touch sensor isn't pressed in
	{
		bumpvalue = sensorValue(bumpSwitch);
		limitvalue = SensorValue(limitSwitch);
		motor[rightMotor] = 20;			          // Motor on port2 is run at half (63) power forward
		motor[leftMotor]  = -20;			          // Motor on port3 is run at half (63) power forward
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
